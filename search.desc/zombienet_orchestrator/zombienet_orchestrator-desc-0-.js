searchState.loadedDescShard("zombienet_orchestrator", 0, "Zombienet Orchestrator error definitions.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nChain-spec builder representation\nBuild the chain-spec\nGet the chain_is from the json content of a chain-spec …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOverride the :code in chain-spec raw version\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\nParachain artifact (could be either the genesis state or …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nAdd a new collator to a parachain\nAdd a node to the relaychain\nAdd a new parachain to the running network\nArguments to pass to the node\nArguments to pass to the node\nCommand to run the node\nCommand to run the node\nEnv vars to set\nEnv vars to set\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nImage to run the node\nImage to run the node\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMake the node a validator\nMake the node a validator\nP2P port to use, if None a random one will be set\nP2P port to use, if None a random one will be set\nGet a parachain config builder from a running network\nGet a first parachain from the list of the parachains with …\nGet a parachain by its unique id.\nPrometheus port to use, if None a random one will be set\nPrometheus port to use, if None a random one will be set\nRegister a parachain, which has already been added to the …\nRPC port to use, if None a random one will be set\nRPC port to use, if None a random one will be set\nSubcommand for the node\nSubcommand for the node\nWaits given number of seconds until all nodes in the …\nPerform a runtime upgrade (with sudo), inner call with the …\nPerform a runtime upgrade (with sudo)\nResult of waiting for a certain number of log lines to …\nConfiguration for controlling log line count waiting …\nAssert on a metric value ‘by name’ from Prometheus …\nAssert on a metric value using a given predicate. See …\nGet the online client for the node\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the logs of the node TODO: do we need the <code>since</code> param, …\nPause the node, this is implemented by pausing the actual …\nGet metric value ‘by name’ from Prometheus (exposed by …\nRestart the node using the same <code>cmd</code>, <code>args</code> and <code>env</code> (and …\nResume the node, this is implemented by resuming the …\nGet the rpc client for the node\nTry to connect to the node.\n<code>ToString::to_string</code>, but without panic on OOM.\nWait until get the online client for the node\nWait until get the online client for the node with a …\nWait until a the number of matching log lines is reach\nWaits until the number of matching log lines satisfies a …\nWait until a metric value pass the <code>predicate</code>\nWait until a metric value pass the <code>predicate</code> with a …\nWaits given number of seconds until node reports that it …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nGet chain name\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nPrometheus exporter default port in collator full-node\nPrometheus exporter default port\nJSON-RPC server (ws)\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nName of the node to use as rpc endpoint\nSeed to use to sign and submit (default to //Alice)\nLocation of the wasm file (could be either a local file or …")