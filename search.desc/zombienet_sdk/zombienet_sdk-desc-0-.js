searchState.loadedDescShard("zombienet_sdk", 0, "Global settings applied to an entire network.\nA global settings builder, used to build <code>GlobalSettings</code> …\nThe parachain will be added to the genesis before spawning.\nThe parachaing will not be registered and the user can …\nA network configuration, composed of a relaychain, …\nA network configuration builder, used to build a …\nThe registration strategy that will be used for the …\nThe parachain will be registered using an extrinsic after …\nAdd a new collator to a parachain\nAdd a node to the relaychain\nAdd a new parachain to the running network\nArguments to pass to the node\nArguments to pass to the node\nAssert on a metric value ‘by name’ from Prometheus …\nAssert on a metric value using a given predicate. See …\nBase directory to use (instead a random tmp one) All the …\nExternal bootnode address.\nSeals the builder and returns a <code>NetworkConfig</code> if there are …\nSeals the builder and returns a <code>GlobalSettings</code> if there …\nGet the online client for the node\nCommand to run the node\nCommand to run the node\nA helper function to dump the network configuration to a …\nEnv vars to set\nEnv vars to set\nHelpers functions to get configuration (e.g. Provider and …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe global settings of the network.\nThe HRMP channels of the network.\nImage to run the node\nImage to run the node\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMake the node a validator\nMake the node a validator\nA helper function to load a network configuration from a …\nA helper function to load a network configuration from a …\nLocal IP used to expose local services (including RPC, …\nGet the logs of the node TODO: do we need the <code>since</code> param, …\nGlobal spawn timeout in seconds.\nIndividual node spawn timeout in seconds.\nP2P port to use, if None a random one will be set\nP2P port to use, if None a random one will be set\nGet a parachain config builder from a running network\nGet a first parachain from the list of the parachains with …\nGet a parachain by its unique id.\nThe parachains of the network.\nPause the node, this is implemented by pausing the actual …\nPrometheus port to use, if None a random one will be set\nPrometheus port to use, if None a random one will be set\nRegister a parachain, which has already been added to the …\nThe relay chain of the network.\nGet metric value ‘by name’ from Prometheus (exposed by …\nRestart the node using the same <code>cmd</code>, <code>args</code> and <code>env</code> (and …\nResume the node, this is implemented by resuming the …\nGet the rpc client for the node\nRPC port to use, if None a random one will be set\nRPC port to use, if None a random one will be set\nNumber of concurrent spawning process to launch\nSpawns a network using the native or k8s provider.\nSubcommand for the node\nSubcommand for the node\nA flag to tear down the network if there are any …\nTry to connect to the node.\n<code>ToString::to_string</code>, but without panic on OOM.\nWait until get the online client for the node\nWait until get the online client for the node with a …\nWait until a the number of matching log lines is reach\nWaits until the number of matching log lines satisfies a …\nWait until a metric value pass the <code>predicate</code>\nWait until a metric value pass the <code>predicate</code> with a …\nWaits given number of seconds until node reports that it …\nWaits given number of seconds until all nodes in the …\nSet the directory to use as base (instead of a random tmp …\nuses the default options for both the relay chain and the …\nSet the global settings using a nested …\nAdd an HRMP channel using a nested <code>HrmpChannelConfigBuilder</code>…\nSet local IP used to expose local services (including RPC, …\nSet global spawn timeout in seconds.\nSet individual node spawn timeout in seconds.\nAdd a parachain using a nested <code>ParachainConfigBuilder</code>.\nuses default settings for setting for:\nSet the external bootnode address.\nSet the relay chain using a nested <code>RelaychainConfigBuilder</code>.\nSet the spawn concurrency\nSet the <code>tear_down_on_failure</code> flag\nContains the error value\nContains the success value\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nName of the node to use as rpc endpoint\nPerform a runtime upgrade (with sudo), inner call with the …\nPerform a runtime upgrade (with sudo)\nSeed to use to sign and submit (default to //Alice)\nLocation of the wasm file (could be either a local file or …")